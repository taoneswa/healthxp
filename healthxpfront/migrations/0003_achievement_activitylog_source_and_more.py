# Generated by Django 5.1.1 on 2025-04-01 10:56

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('healthxpfront', '0002_activitytype_reward_activitylog_challenge_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('icon_class', models.CharField(default='fas fa-medal', max_length=50)),
                ('points_reward', models.IntegerField(default=50)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('achievement_type', models.CharField(choices=[('activity_count', 'Activity Count'), ('streak', 'Activity Streak'), ('challenge', 'Challenge Completion'), ('points', 'Points Milestone'), ('special', 'Special Achievement')], max_length=50)),
                ('required_count', models.IntegerField(default=1, help_text='Number required to earn this achievement')),
            ],
        ),
        migrations.AddField(
            model_name='activitylog',
            name='source',
            field=models.CharField(choices=[('manual', 'Manual Entry'), ('fitbit', 'Fitbit'), ('googlefit', 'Google Fit'), ('applehealth', 'Apple Health'), ('strava', 'Strava'), ('garmin', 'Garmin')], default='manual', max_length=50),
        ),
        migrations.AddField(
            model_name='challenge',
            name='difficulty_level',
            field=models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced')], default='intermediate', max_length=20),
        ),
        migrations.AddField(
            model_name='challenge',
            name='is_auto_generated',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='challenge',
            name='is_featured',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='profile',
            name='current_streak',
            field=models.IntegerField(default=0, help_text='Current consecutive days with activity'),
        ),
        migrations.AddField(
            model_name='profile',
            name='last_activity_date',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='profile',
            name='longest_streak',
            field=models.IntegerField(default=0, help_text='Longest streak of consecutive days with activity'),
        ),
        migrations.AddField(
            model_name='reward',
            name='category',
            field=models.CharField(choices=[('discount', 'Discount'), ('product', 'Physical Product'), ('digital', 'Digital Good'), ('membership', 'Membership'), ('experience', 'Experience')], default='discount', max_length=50),
        ),
        migrations.AddField(
            model_name='reward',
            name='sponsor',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.CreateModel(
            name='FitnessDeviceConnection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.CharField(choices=[('fitbit', 'Fitbit'), ('googlefit', 'Google Fit'), ('applehealth', 'Apple Health'), ('strava', 'Strava'), ('garmin', 'Garmin')], max_length=50)),
                ('access_token', models.TextField()),
                ('refresh_token', models.TextField(blank=True, null=True)),
                ('token_expiry', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('last_sync', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fitness_connections', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'provider')},
            },
        ),
        migrations.CreateModel(
            name='HealthMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('weight', models.FloatField(blank=True, help_text='Weight in kg', null=True)),
                ('heart_rate', models.IntegerField(blank=True, help_text='Resting heart rate in bpm', null=True)),
                ('sleep_duration', models.FloatField(blank=True, help_text='Sleep duration in hours', null=True)),
                ('steps', models.IntegerField(blank=True, help_text='Step count', null=True)),
                ('calories_burned', models.IntegerField(blank=True, help_text='Total calories burned', null=True)),
                ('source', models.CharField(choices=[('manual', 'Manual Entry'), ('fitbit', 'Fitbit'), ('googlefit', 'Google Fit'), ('applehealth', 'Apple Health'), ('strava', 'Strava'), ('garmin', 'Garmin')], default='manual', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='health_metrics', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date'],
                'unique_together': {('user', 'date')},
            },
        ),
        migrations.CreateModel(
            name='UserAchievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_earned', models.DateTimeField(auto_now_add=True)),
                ('achievement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='healthxpfront.achievement')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='achievements', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'achievement')},
            },
        ),
    ]
