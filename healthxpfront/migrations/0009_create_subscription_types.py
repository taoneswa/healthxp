# Generated by Django 5.1.1 on 2025-04-01 14:43

from django.db import migrations


def create_subscription_types(apps, schema_editor):
    SubscriptionType = apps.get_model('healthxpfront', 'SubscriptionType')
    Subscription = apps.get_model('healthxpfront', 'Subscription')

    # Create subscription types
    types = {
        'silver': {
            'name': 'Silver Membership',
            'code': 'silver',
            'description': 'Basic membership with essential features',
            'amount': '29.99',
            'features': '- Access to basic workouts\n- Activity tracking\n- Basic challenges',
        },
        'gold': {
            'name': 'Gold Membership',
            'code': 'gold',
            'description': 'Premium membership with advanced features',
            'amount': '49.99',
            'features': '- All Silver features\n- Advanced workouts\n- Premium challenges\n- Nutrition tracking',
        },
        'platinum': {
            'name': 'Platinum Membership',
            'code': 'platinum',
            'description': 'Elite membership with all features',
            'amount': '99.99',
            'features': '- All Gold features\n- Personal trainer\n- Custom workout plans\n- Priority support',
        },
        'coop_silver': {
            'name': 'Co-operate Silver Package',
            'code': 'coop_silver',
            'description': 'Basic corporate package for small teams',
            'amount': '199.99',
            'features': '- Up to 10 team members\n- Basic team analytics\n- Team challenges',
        },
        'coop_gold': {
            'name': 'Co-operate Gold Package',
            'code': 'coop_gold',
            'description': 'Advanced corporate package for medium teams',
            'amount': '399.99',
            'features': '- Up to 50 team members\n- Advanced team analytics\n- Custom team challenges\n- Team leaderboards',
        },
        'coop_platinum': {
            'name': 'Co-operate Platinum Package',
            'code': 'coop_platinum',
            'description': 'Elite corporate package for large teams',
            'amount': '999.99',
            'features': '- Unlimited team members\n- Enterprise analytics\n- Custom team programs\n- Dedicated support',
        },
    }

    subscription_types = {}
    for code, data in types.items():
        subscription_type = SubscriptionType.objects.create(
            name=data['name'],
            code=code,
            description=data['description'],
            amount=data['amount'],
            features=data['features'],
            is_active=True
        )
        subscription_types[code] = subscription_type

    # Update existing subscriptions
    for subscription in Subscription.objects.all():
        old_type = subscription.subscription_type
        if old_type in subscription_types:
            subscription.subscription_type = subscription_types[old_type]
            subscription.save()


def reverse_subscription_types(apps, schema_editor):
    SubscriptionType = apps.get_model('healthxpfront', 'SubscriptionType')
    SubscriptionType.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ('healthxpfront', '0008_subscriptiontype_and_more'),
    ]

    operations = [
        migrations.RunPython(create_subscription_types,
                             reverse_subscription_types),
    ]
